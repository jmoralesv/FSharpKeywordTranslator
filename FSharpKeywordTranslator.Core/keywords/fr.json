{
  "language": "fr",
  "languageName": "French",
  "keywords": {
    "abstract": "abstraite",
    "and": "et",
    "as": "comme",
    "assert": "affirmer",
    "base": "base",
    "begin": "commencer",
    "class": "classe",
    "const": "const",
    "default": "défaut",
    "delegate": "déléguer",
    "do": "faire",
    "done": "faite",
    "downcast": "abattue",
    "downto": "jusqu'à",
    "elif": "autsi",
    "else": "autre",
    "end": "fin",
    "exception": "exception",
    "extern": "externe",
    "false": "faux",
    "finally": "enfin",
    "fixed": "fixée",
    "for": "pour",
    "fun": "fon",
    "function": "fonction",
    "global": "mondiale",
    "if": "si",
    "in": "dans",
    "inherit": "hérites",
    "inline": "enligne",
    "interface": "interface",
    "internal": "interne",
    "lazy": "paresseuse",
    "let": "laisser",
    "match": "correspondre",
    "member": "membre",
    "mod": "mod",
    "module": "module",
    "mutable": "mutable",
    "namespace": "espacedenoms",
    "new": "nouvelle",
    "null": "nulle",
    "of": "de",
    "open": "ouvrir",
    "or": "ou",
    "override": "passeroutre",
    "private": "privée",
    "public": "publique",
    "rec": "réc",
    "return": "retour",
    "sig": "sig",
    "static": "statique",
    "struct": "struct",
    "then": "alors",
    "to": "à",
    "true": "vraie",
    "try": "essayer",
    "type": "taper",
    "upcast": "upcast",
    "use": "utiliser",
    "val": "val",
    "void": "vide",
    "when": "quand",
    "while": "alorsque",
    "with": "avec",
    "yield": "rendement"
  },
  "variables": {
    "name": "nom",
    "age": "âge",
    "sum": "somme",
    "fibonacci": "fibonacci",
    "increment": "incrément",
    "result1": "résultat1",
    "result2": "résultat2",
    "apply1": "postuler1",
    "filter1": "filtre1",
    "three": "trois",
    "color": "couleur",
    "red": "rouge",
    "green": "verte",
    "blue": "bleue",
    "printColorName": "imprimerNomCouleur",
    "personName": "nomPersonne",
    "firstOnly": "premierSeulement",
    "lastOnly": "dernierSeulement",
    "firstLast": "premierDernier",
    "firstName": "prénom",
    "lastName": "nomFamille",
    "list1": "liste1",
    "constructQuery": "construireRequête"
  },
  "stdLib": {
    "printf": "impressionf",
    "printfn": "impressionfn",
    "string": "string"
  }
}