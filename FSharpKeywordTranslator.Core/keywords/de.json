{
  "language": "de",
  "languageName": "German",
  "keywords": {
    "abstract": "abstrakt",
    "and": "und",
    "as": "als",
    "assert": "behaupten",
    "base": "base",
    "begin": "beginnen",
    "class": "klasse",
    "const": "konst",
    "default": "default",
    "delegate": "delegieren",
    "do": "tun",
    "done": "erledigt",
    "downcast": "downcast",
    "downto": "biszu",
    "elif": "anwenn",
    "else": "sonst",
    "end": "ende",
    "exception": "ausnahme",
    "extern": "extern",
    "false": "falsch",
    "finally": "endlich",
    "fixed": "fest",
    "for": "für",
    "fun": "fun",
    "function": "funktion",
    "global": "global",
    "if": "wenn",
    "in": "in",
    "inherit": "erben",
    "inline": "inline",
    "interface": "interface",
    "internal": "intern",
    "lazy": "faul",
    "let": "lassen",
    "match": "entsprechen",
    "member": "glied",
    "mod": "mod",
    "module": "modul",
    "mutable": "mutabel",
    "namespace": "namensraum",
    "new": "neu",
    "null": "null",
    "of": "von",
    "open": "öffnen",
    "or": "oder",
    "override": "überschreiben",
    "private": "privat",
    "public": "öffentlich",
    "rec": "rek",
    "return": "zurückkehren",
    "sig": "sig",
    "static": "statisch",
    "struct": "struktur",
    "then": "dann",
    "to": "zu",
    "true": "wahr",
    "try": "versuchen",
    "type": "typ",
    "upcast": "upcast",
    "use": "verwenden",
    "val": "wert",
    "void": "leere",
    "when": "wobei",
    "while": "während",
    "with": "mit",
    "yield": "ergeben"
  },
  "variables": {
    "name": "name",
    "age": "alter",
    "sum": "summe",
    "fibonacci": "fibonacci",
    "increment": "zunahme",
    "result1": "ergebnis1",
    "result2": "ergebnis2",
    "apply1": "anwenden1",
    "filter1": "filter1",
    "three": "drei",
    "color": "farbe",
    "red": "rot",
    "green": "grün",
    "blue": "blau",
    "printColorName": "farbnamenDrucken",
    "personName": "nameDerPerson",
    "firstOnly": "nurVorname",
    "lastOnly": "nurNachname",
    "firstLast": "vornameNachname",
    "firstName": "vorname",
    "lastName": "nachname",
    "list1": "liste1",
    "constructQuery": "konstruktAbfrage"
  },
  "stdLib": {
    "printf": "printf",
    "printfn": "printfn",
    "string": "schnur"
  }
}