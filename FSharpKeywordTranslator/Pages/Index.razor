@page "/"
@using Microsoft.JSInterop
@inject LanguageConfigurationManager languageManager
@inject IJSRuntime JS

<PageTitle>Examples of translations</PageTitle>

<h1>Examples of translations</h1>

<div class="row g-3">
    <div class="col-md-2">
        <select @bind="@Language" class="form-control form-select">
            @foreach (var item in WellKnownConstants.Languages)
            {
                <option value="@item">@item</option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <button type="button" @onclick=SwitchLanguage class="btn btn-primary">Switch language</button>
    </div>
</div>

<pre><code class="language-fsharp" @ref="divElement"></code></pre>

@code {
    public string Language { get; set; } = "en";
    private ElementReference divElement;

    Dictionary<string, LanguageConfiguration> database = new();

    LanguageConfiguration keywordsObj = null!;

    protected override async Task OnInitializedAsync()
    {
        foreach (var lang in WellKnownConstants.Languages)
        {
            var keywords = await languageManager.GetLanguageConfigurationAsync(lang);
            database[lang] = keywords ?? new();
        }

        keywordsObj = database[Language];
        await JS.InvokeVoidAsync("switchLanguage", keywordsObj.Keywords);
        await JS.InvokeVoidAsync("highlightElementById", GetCode(keywordsObj), Language, divElement);
    }

    private string GetCode(LanguageConfiguration keywordsObj)
    {
        return $"{keywordsObj.Keywords.Let} x = \"4\"";
    }

    public async Task SwitchLanguage()
    {
        keywordsObj = database[Language];
        await JS.InvokeVoidAsync("switchLanguage", keywordsObj.Keywords);
        await JS.InvokeVoidAsync("highlightElementById", GetCode(keywordsObj), Language, divElement);
    }
}

